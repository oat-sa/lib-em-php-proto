<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/owner_type.proto

namespace Oat\Envmgmt\Common;

use UnexpectedValueException;

/**
 * Protobuf type <code>oat.envmgmt.common.OwnerType</code>
 */
class OwnerType
{
    /**
     * Generated from protobuf enum <code>ENVIRONMENT = 0;</code>
     */
    const ENVIRONMENT = 0;
    /**
     * Generated from protobuf enum <code>ACCOUNT = 1;</code>
     */
    const ACCOUNT = 1;
    /**
     * Generated from protobuf enum <code>TENANT = 2;</code>
     */
    const TENANT = 2;

    private static $valueToName = [
        self::ENVIRONMENT => 'ENVIRONMENT',
        self::ACCOUNT => 'ACCOUNT',
        self::TENANT => 'TENANT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

